{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;QAagB,gB,GAAA,gB;QAWA,a,GAAA,a;QAUA,W,GAAA,W;;AAlChB;;;;AACA;;;;AACA;;;;;;AAEO,IAAM,uCAAN;AACA,IAAM,6CAAN;AACA,IAAM,sDAAN;;AAEP;;;;;AAKO,SAAS,gBAAT,GAA4B;AAC/B,WAAO,IAAI,UAAJ,EAAP;AACH;;AAED;;;;;;;AAOO,SAAS,aAAT,GAAiC;AAAA,sCAAP,KAAO;AAAP,aAAO;AAAA;;AACpC,8CAAW,OAAX,gBAAsB,KAAtB;AACH;;AAED;;;;;;AAMO,SAAS,WAAT,CAAqB,OAArB,EAA8B;AACjC,WAAO,IAAI,KAAJ,CAAU,OAAV,CAAP;AACH;;kBAEc;AACX,sCADW;AAEX,gCAFW;AAGX,4BAHW;AAIX,gBAJW;AAKX,oBALW;AAMX;AANW,C","file":"index.js","sourcesContent":["import StoreImport      from './store';\r\nimport ActionsImport    from './actions';\r\nimport DispatcherImport from './dispatcher';\r\n\r\nexport const Store      = StoreImport;\r\nexport const Actions    = ActionsImport;\r\nexport const Dispatcher = DispatcherImport;\r\n\r\n/**\r\n * Creates a new dispatcher, equivalent to new Dispatcher()\r\n * @returns { Dispatcher } A new generated dispatcher\r\n * @see Dispatcher.prototype.constructor\r\n */\r\nexport function createDispatcher() {\r\n    return new Dispatcher();\r\n}\r\n\r\n/**\r\n * Creates a new action set, equivalent to new Actions()\r\n * @param { Dispatcher } dispatcher (optional) The dispatcher this action set uses \r\n * @param { string[] } actions The actions names the names for the actions to be created.  \r\n * @returns { Actions } A set of actions\r\n * @see Actions.prototype.constructor\r\n */\r\nexport function createActions(...names) {\r\n    return new Actions(...names);\r\n}\r\n\r\n/**\r\n * Creates a new store with options assigned. Equivalent to new Store(options)\r\n * @param { object } A set of options to use the sotarage\r\n * @returns { Store } A new Store.\r\n * @see Store.prototype.constructor\r\n */\r\nexport function createStore(options) {\r\n    return new Store(options);\r\n}\r\n\r\nexport default {\r\n    createDispatcher,\r\n    createActions,\r\n    createStore,\r\n    Store,\r\n    Actions,\r\n    Dispatcher\r\n};"],"sourceRoot":"/source/"}