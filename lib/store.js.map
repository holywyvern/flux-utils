{"version":3,"sources":["store.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;;;;;;;IAEM,K;AAEF,yBAAmD;AAAA,YAArC,OAAqC,QAArC,OAAqC;AAAA,gCAA5B,OAA4B;AAAA,YAA5B,OAA4B,gCAAlB,EAAkB;AAAA,8BAAd,KAAc;AAAA,YAAd,KAAc,8BAAN,EAAM;;AAAA;;AAC/C,aAAK,iBAAL,CAAuB,KAAvB;AACA,aAAK,cAAL,CAAoB,OAApB,EAA6B,OAA7B;AACH;;;;0CAEiB,K,EAAO;AACrB,gBAAI,aAAa,wBAAK,KAAL,CAAjB;AACA,gBAAI,SAAa,6BAAjB;AACA,mBAAO,gBAAP,CAAwB,IAAxB,EAA8B;AAC1B,wBAAQ;AACJ,uBADI,iBACE;AACF,+BAAO,MAAP;AACH;AAHG,iBADkB;AAM1B,uBAAQ;AACJ,uBADI,iBACE;AACF,+BAAO,wBAAK,UAAL,CAAP;AACH,qBAHG;AAIJ,uBAJI,eAIA,KAJA,EAIO;AACP,qCAAa,wBAAK,KAAL,CAAb;AACA,+BAAO,IAAP,CAAY,QAAZ;AACH;AAPG;AANkB,aAA9B;AAgBH;;;uCAEc,O,EAAS,O,EAAS;AAAA;AAAA;AAAA;;AAAA;AAC7B,qCAAmB,QAAQ,IAAR,EAAnB,8HAAmC;AAAA,wBAA1B,MAA0B;;AAC/B,wBAAI,WAAW,QAAQ,MAAR,EAAgB,IAAhB,CAAqB,IAArB,CAAf;AACA,4BAAQ,UAAR,CAAmB,EAAnB,CAAsB,MAAtB,EAA8B,QAA9B;AACH;AAJ4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKhC;;;;;;kBAIU,K","file":"store.js","sourcesContent":["import copy         from 'deep-copy';\r\nimport EventManager from 'generic-events';\r\n\r\nclass Store {\r\n\r\n    constructor({ actions, methods = {}, state = {} }) {\r\n        this._defineProperties(state);\r\n        this._defineActions(actions, methods);\r\n    }\r\n\r\n    _defineProperties(state) {\r\n        let storeState = copy(state);\r\n        let events     = new EventManager();\r\n        Object.defineProperties(this, {\r\n            events: { \r\n                get() { \r\n                    return events; \r\n                } \r\n            },\r\n            state:  { \r\n                get() { \r\n                    return copy(storeState); \r\n                }, \r\n                set(value) { \r\n                    storeState = copy(value);\r\n                    events.fire('change');\r\n                } \r\n            }\r\n        });\r\n    }\r\n\r\n    _defineActions(actions, methods) {\r\n        for (let action of actions.list()) {\r\n            let callback = methods[action].bind(this);\r\n            actions.dispatcher.on(action, callback);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default Store;"],"sourceRoot":"/source/"}